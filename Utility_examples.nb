(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     95747,       3054]
NotebookOptionsPosition[     83431,       2659]
NotebookOutlinePosition[     84332,       2691]
CellTagsIndexPosition[     84162,       2684]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
For evaluating any of the examples in this notebook, one has to load the \
Utility package:\
\>", "Text",
 CellChangeTimes->{{3.6061327785932283`*^9, 3.606132835153154*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Append", "[", 
     RowBox[{"$Path", ",", 
      RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utility`"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6061327708198433`*^9, 3.60613277187703*^9}, {
  3.606191420060368*^9, 3.606191421160811*^9}}],

Cell["All functions defined in the Utility` context:", "Text",
 CellChangeTimes->{{3.6061327785932283`*^9, 3.606132835153154*^9}, {
  3.606134801222459*^9, 3.606134820566264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Utility`*"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606134822752797*^9, 3.606134826297391*^9}}],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["Utility`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["Utility`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["alternative",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"alternative", "Utility`"}},
          
          ButtonNote->"Utility`"], 
         ButtonBox["invertArguments",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"invertArguments", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["set",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"set", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["declareIndexed",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"declareIndexed", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["keepClean",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"keepClean", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["sign",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"sign", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["declareIndexedAM",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"declareIndexedAM", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["keepInvolving",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"keepInvolving", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["simplifyIntegrateRules",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"simplifyIntegrateRules", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["declareIndexedPrimed",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"declareIndexedPrimed", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["keepNotInvolving",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"keepNotInvolving", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["simplifySeperateIntegrateRules",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {
            "simplifySeperateIntegrateRules", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["declarePrimed",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"declarePrimed", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["normalizeSumRule",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"normalizeSumRule", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["simplifySumIntegrate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"simplifySumIntegrate", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["ensureSignQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"ensureSignQ", "Utility`"}},
          
          ButtonNote->"Utility`"], 
         ButtonBox["OddPermutations",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"OddPermutations", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["simplifySumRules",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"simplifySumRules", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["evenPermM",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"evenPermM", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["removeBlanks",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"removeBlanks", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["speM",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"speM", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["EvenPermutations",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"EvenPermutations", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["removeSign",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"removeSign", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["sum",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"sum", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["FreeQAll",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"FreeQAll", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["replaceUnique",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"replaceUnique", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["tochar",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"tochar", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["FreeQAllUnsigned",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"FreeQAllUnsigned", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["ruleJoin",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"ruleJoin", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["tonum",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"tonum", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["FreeQNone",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"FreeQNone", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["ruleSplit",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"ruleSplit", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["unsM",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"unsM", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["FreeQNoneUnsigned",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"FreeQNoneUnsigned", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["ruleToFunction",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"ruleToFunction", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["$altFunctionList",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"$altFunctionList", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["getAllVariables",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info3616237485-2241440", {"getAllVariables", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["ruleToFunctionRepeated",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"ruleToFunctionRepeated", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["$indexed",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"$indexed", "Utility`"}},
          ButtonNote->"Utility`"]},
        {
         ButtonBox["integrate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237485-2241440", {"integrate", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["seperateIntegrate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237485-2241440", {"seperateIntegrate", "Utility`"}},
          ButtonNote->"Utility`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.616230285068095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern Matching", "Section",
 CellChangeTimes->{{3.606133302338048*^9, 3.606133305266151*^9}}],

Cell["\<\
In this section various functions useful for pattern matching are presented.\
\>", "Text",
 CellChangeTimes->{{3.606133317777687*^9, 3.606133331745942*^9}}],

Cell["One particular annoying example is the following rule:", "Text",
 CellChangeTimes->{{3.606193558727981*^9, 3.606193592407723*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rule", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a_", ",", 
      RowBox[{"-", "a_"}]}], "]"}], "\[RuleDelayed]", " ", 
    RowBox[{"G", "[", "a", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.606193593848092*^9, 3.606193619485084*^9}, {
  3.6061936916455097`*^9, 3.6061936959001703`*^9}, {3.60619438266998*^9, 
  3.606194383405799*^9}}],

Cell["\<\
One wants to transform the function \[OpenCurlyDoubleQuote]f\
\[CloseCurlyDoubleQuote], if both arguments have the opposite sign.
However, this only matches if the first argument is positive:\
\>", "Text",
 CellChangeTimes->{{3.606193630344117*^9, 3.606193677752146*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"u", ",", 
    RowBox[{"-", "u"}]}], "]"}], "/.", "rule"}]], "Input",
 CellChangeTimes->{{3.606193680708572*^9, 3.606193687323803*^9}}],

Cell[BoxData[
 RowBox[{"G", "[", "u", "]"}]], "Output",
 CellChangeTimes->{{3.6061936877841263`*^9, 3.606193699910584*^9}, 
   3.6061943848964577`*^9}]
}, Open  ]],

Cell["Inverting both arguments, the rule fails:", "Text",
 CellChangeTimes->{{3.606193705320067*^9, 3.6061937173210297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"-", "u"}], ",", "u"}], "]"}], "/.", "rule"}]], "Input",
 CellChangeTimes->{{3.606193725829267*^9, 3.606193730011633*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"-", "u"}], ",", "u"}], "]"}]], "Output",
 CellChangeTimes->{3.606193730646618*^9}]
}, Open  ]],

Cell["\<\
In the Utility package we have two possible solutions to that, the first one \
is a special matching function. \
\>", "Text",
 CellChangeTimes->{{3.606193739000021*^9, 3.606193791880068*^9}, {
  3.606193975769014*^9, 3.606194021400353*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ruleSpecial", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"speM", "[", "a", "]"}], ",", 
      RowBox[{"speM", "[", 
       RowBox[{"-", "a"}], "]"}]}], "]"}], "\[RuleDelayed]", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"{", "apos", "}"}], "]"}], ">", "0"}], ",", 
      RowBox[{"G", "[", "apos", "]"}], ",", 
      RowBox[{"G", "[", 
       RowBox[{"-", "aneg"}], "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6061937345315657`*^9, 3.606193735817986*^9}, {
  3.60619379674937*^9, 3.6061938196938047`*^9}, {3.606194044879177*^9, 
  3.606194049359322*^9}, {3.6061943891496897`*^9, 3.60619438980709*^9}, {
  3.606194440447639*^9, 3.606194486461884*^9}}],

Cell["\<\
However, this enforces a special naming scheme.
Depending on the combination of signs  \[OpenCurlyDoubleQuote]apos\
\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]aneg\
\[CloseCurlyDoubleQuote] are defined if the original pattern name is \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote]. If someone has an idea how \
to assign the value to the original pattern name, please let me know!
This now works as expected:\
\>", "Text",
 CellChangeTimes->{{3.606193839576812*^9, 3.606193846888391*^9}, {
  3.606193893336067*^9, 3.606193895336022*^9}, {3.606194022378179*^9, 
  3.6061940765049257`*^9}, {3.60619420157723*^9, 3.6061942410647497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"u", ",", 
    RowBox[{"-", "u"}]}], "]"}], "/.", "ruleSpecial"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"-", "u"}], ",", "u"}], "]"}], "/.", 
  "ruleSpecial"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"u", ",", "u"}], "]"}], "/.", 
  "ruleSpecial"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"-", "u"}], ",", 
    RowBox[{"-", "u"}]}], "]"}], "/.", "ruleSpecial"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "/.", "ruleSpecial"}]}], "Input",
 CellChangeTimes->{{3.606193848218602*^9, 3.606193886201829*^9}}],

Cell[BoxData[
 RowBox[{"G", "[", "u", "]"}]], "Output",
 CellChangeTimes->{{3.606193866038415*^9, 3.606193886758895*^9}, 
   3.606194141981546*^9, 3.6061942581358023`*^9, 3.606194391207417*^9, 
   3.606194488583735*^9}],

Cell[BoxData[
 RowBox[{"G", "[", 
  RowBox[{"-", "u"}], "]"}]], "Output",
 CellChangeTimes->{{3.606193866038415*^9, 3.606193886758895*^9}, 
   3.606194141981546*^9, 3.6061942581358023`*^9, 3.606194391207417*^9, 
   3.60619448858636*^9}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"u", ",", "u"}], "]"}]], "Output",
 CellChangeTimes->{{3.606193866038415*^9, 3.606193886758895*^9}, 
   3.606194141981546*^9, 3.6061942581358023`*^9, 3.606194391207417*^9, 
   3.6061944885884666`*^9}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"-", "u"}], ",", 
   RowBox[{"-", "u"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.606193866038415*^9, 3.606193886758895*^9}, 
   3.606194141981546*^9, 3.6061942581358023`*^9, 3.606194391207417*^9, 
   3.606194488589744*^9}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{{3.606193866038415*^9, 3.606193886758895*^9}, 
   3.606194141981546*^9, 3.6061942581358023`*^9, 3.606194391207417*^9, 
   3.606194488590725*^9}]
}, Open  ]],

Cell["\<\
We can also use conditions. There disadvante is the time it takes to match \
the pattern: The condition is checked after matching, while the special \
matching functions check directly.\
\>", "Text",
 CellChangeTimes->{{3.606194266457177*^9, 3.606194373353346*^9}, {
  3.606194626777731*^9, 3.606194628169816*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ruleCondition", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a_", ",", "aneg_"}], "]"}], "\[RuleDelayed]", " ", 
    RowBox[{
     RowBox[{"G", "[", "a", "]"}], "/;", 
     RowBox[{"ensureSignQ", "[", 
      RowBox[{"a", ",", "aneg"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6061943744942827`*^9, 3.6061944142374983`*^9}, {
  3.606194558300786*^9, 3.6061945963354397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"u", ",", 
    RowBox[{"-", "u"}]}], "]"}], "/.", 
  "ruleCondition"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"-", "u"}], ",", "u"}], "]"}], "/.", 
  "ruleCondition"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"u", ",", "u"}], "]"}], "/.", 
  "ruleCondition"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"-", "u"}], ",", 
    RowBox[{"-", "u"}]}], "]"}], "/.", 
  "ruleCondition"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "/.", "ruleCondition"}]}], "Input",
 CellChangeTimes->{{3.606194605730803*^9, 3.606194611486046*^9}}],

Cell[BoxData[
 RowBox[{"G", "[", "u", "]"}]], "Output",
 CellChangeTimes->{3.6061946140399237`*^9}],

Cell[BoxData[
 RowBox[{"G", "[", 
  RowBox[{"-", "u"}], "]"}]], "Output",
 CellChangeTimes->{3.6061946140417213`*^9}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"u", ",", "u"}], "]"}]], "Output",
 CellChangeTimes->{3.606194614044025*^9}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"-", "u"}], ",", 
   RowBox[{"-", "u"}]}], "]"}]], "Output",
 CellChangeTimes->{3.606194614047027*^9}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.606194614048677*^9}]
}, Open  ]],

Cell["\<\
If one wants to include an unsigned version of the pattern, this is possible \
as well with both of the variants above:\
\>", "Text",
 CellChangeTimes->{{3.606194748186674*^9, 3.606194793257946*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rule2Special", "=", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"speM", "[", "a", "]"}], ",", 
        RowBox[{"speM", "[", 
         RowBox[{"-", "a"}], "]"}]}], "]"}], ",", 
      RowBox[{"unsM", "[", "a", "]"}]}], "]"}], "\[RuleDelayed]", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"{", "apos", "}"}], "]"}], ">", "0"}], ",", 
      RowBox[{"G", "[", "apos", "]"}], ",", 
      RowBox[{"G", "[", 
       RowBox[{"-", "aneg"}], "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.60619485187278*^9, 3.606194871427368*^9}, {
  3.606194926592379*^9, 3.60619492793841*^9}, {3.606195008531105*^9, 
  3.606195015027466*^9}, {3.606195110880659*^9, 3.606195116259089*^9}, {
  3.606195162160965*^9, 3.6061951763383636`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"u", ",", 
      RowBox[{"-", "u"}]}], "]"}], ",", "u"}], "]"}], "/.", 
  "rule2Special"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"-", "u"}], ",", "u"}], "]"}], ",", "u"}], "]"}], "/.", 
  "rule2Special"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"u", ",", 
      RowBox[{"-", "u"}]}], "]"}], ",", 
    RowBox[{"-", "u"}]}], "]"}], "/.", 
  "rule2Special"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"-", "u"}], ",", 
      RowBox[{"-", "u"}]}], "]"}], ",", "u"}], "]"}], "/.", 
  "rule2Special"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"u", ",", 
      RowBox[{"-", "u"}]}], "]"}], ",", "b"}], "]"}], "/.", 
  "rule2Special"}]}], "Input",
 CellChangeTimes->{{3.606194889602067*^9, 3.606194934527471*^9}, {
  3.606195163552726*^9, 3.606195168302237*^9}}],

Cell[BoxData[
 RowBox[{"G", "[", "u", "]"}]], "Output",
 CellChangeTimes->{
  3.6061949365998707`*^9, {3.606195010200243*^9, 3.60619501744816*^9}, 
   3.606195118504231*^9, 3.606195177864612*^9}],

Cell[BoxData[
 RowBox[{"G", "[", 
  RowBox[{"-", "u"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6061949365998707`*^9, {3.606195010200243*^9, 3.60619501744816*^9}, 
   3.606195118504231*^9, 3.606195177867652*^9}],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u", ",", 
     RowBox[{"-", "u"}]}], "]"}], ",", 
   RowBox[{"-", "u"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6061949365998707`*^9, {3.606195010200243*^9, 3.60619501744816*^9}, 
   3.606195118504231*^9, 3.606195177869499*^9}],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "u"}], ",", 
     RowBox[{"-", "u"}]}], "]"}], ",", "u"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6061949365998707`*^9, {3.606195010200243*^9, 3.60619501744816*^9}, 
   3.606195118504231*^9, 3.606195177871009*^9}],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u", ",", 
     RowBox[{"-", "u"}]}], "]"}], ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6061949365998707`*^9, {3.606195010200243*^9, 3.60619501744816*^9}, 
   3.606195118504231*^9, 3.6061951778719597`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rule2Condition", "=", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a_", ",", "aneg_"}], "]"}], ",", "auns_"}], "]"}], 
    "\[RuleDelayed]", " ", 
    RowBox[{
     RowBox[{"G", "[", "a", "]"}], "/;", 
     RowBox[{"ensureSignQ", "[", 
      RowBox[{"a", ",", "aneg", ",", "auns"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6061952575824842`*^9, 3.606195273904335*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"u", ",", 
      RowBox[{"-", "u"}]}], "]"}], ",", "u"}], "]"}], "/.", 
  "rule2Condition"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"-", "u"}], ",", "u"}], "]"}], ",", "u"}], "]"}], "/.", 
  "rule2Condition"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"u", ",", 
      RowBox[{"-", "u"}]}], "]"}], ",", 
    RowBox[{"-", "u"}]}], "]"}], "/.", 
  "rule2Condition"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"-", "u"}], ",", 
      RowBox[{"-", "u"}]}], "]"}], ",", "u"}], "]"}], "/.", 
  "rule2Condition"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"u", ",", 
      RowBox[{"-", "u"}]}], "]"}], ",", "b"}], "]"}], "/.", 
  "rule2Condition"}]}], "Input",
 CellChangeTimes->{{3.606195288179582*^9, 3.606195290861086*^9}}],

Cell[BoxData[
 RowBox[{"G", "[", "u", "]"}]], "Output",
 CellChangeTimes->{3.606195292952724*^9}],

Cell[BoxData[
 RowBox[{"G", "[", 
  RowBox[{"-", "u"}], "]"}]], "Output",
 CellChangeTimes->{3.6061952929553127`*^9}],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u", ",", 
     RowBox[{"-", "u"}]}], "]"}], ",", 
   RowBox[{"-", "u"}]}], "]"}]], "Output",
 CellChangeTimes->{3.606195292958068*^9}],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"-", "u"}], ",", 
     RowBox[{"-", "u"}]}], "]"}], ",", "u"}], "]"}]], "Output",
 CellChangeTimes->{3.6061952929592733`*^9}],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u", ",", 
     RowBox[{"-", "u"}]}], "]"}], ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.606195292961328*^9}]
}, Open  ]],

Cell["\<\
Additionally there is a convenience matching function for even permutations:\
\>", "Text",
 CellChangeTimes->{{3.606195759035039*^9, 3.606195783451048*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rulePerm", "=", 
  RowBox[{
   RowBox[{"evenPermM", "[", 
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"G", "[", 
    RowBox[{"a", "+", "b", "+", "c"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.606195789710927*^9, 3.606195825008718*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], "|", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", "c", ",", "a"}], "]"}], "|", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "\[RuleDelayed]", 
  RowBox[{"G", "[", 
   RowBox[{"a", "+", "b", "+", "c"}], "]"}]}]], "Output",
 CellChangeTimes->{3.6061958854180727`*^9}]
}, Open  ]],

Cell["This matches all even permutations of a,b and c:", "Text",
 CellChangeTimes->{{3.606195830746592*^9, 3.606195841674614*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}], "/.", 
  "rulePerm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"b", ",", "c", ",", "a"}], "]"}], "/.", 
  "rulePerm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"c", ",", "a", ",", "b"}], "]"}], "/.", "rulePerm"}]}], "Input",
 CellChangeTimes->{{3.606195845855505*^9, 3.606195892724123*^9}}],

Cell[BoxData[
 RowBox[{"G", "[", 
  RowBox[{"a", "+", "b", "+", "c"}], "]"}]], "Output",
 CellChangeTimes->{{3.606195889049761*^9, 3.606195893129724*^9}}],

Cell[BoxData[
 RowBox[{"G", "[", 
  RowBox[{"a", "+", "b", "+", "c"}], "]"}]], "Output",
 CellChangeTimes->{{3.606195889049761*^9, 3.606195893132065*^9}}],

Cell[BoxData[
 RowBox[{"G", "[", 
  RowBox[{"a", "+", "b", "+", "c"}], "]"}]], "Output",
 CellChangeTimes->{{3.606195889049761*^9, 3.6061958931341963`*^9}}]
}, Open  ]],

Cell["Odd permutations are not matched", "Text",
 CellChangeTimes->{{3.6061958730031567`*^9, 3.606195878522488*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "c", ",", "b"}], "]"}], "/.", "rulePerm"}]], "Input",
 CellChangeTimes->{{3.6061958817103233`*^9, 3.606195883663558*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "c", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.606195894777768*^9}]
}, Open  ]],

Cell["\<\
Additionally, we have an \[OpenCurlyDoubleQuote]alternative\
\[CloseCurlyDoubleQuote] function, which is automatically pulled out of \
expressions.
It may be useful for pattern matching:\
\>", "Text",
 CellChangeTimes->{{3.606196630975913*^9, 3.606196665003607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"alternative", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "*", 
     RowBox[{"alternative", "[", 
      RowBox[{"c", ",", "d"}], "]"}]}], "+", 
    RowBox[{"alternative", "[", 
     RowBox[{"e", ",", "f"}], "]"}]}], ",", "u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.60619666964295*^9, 3.6061967135699463`*^9}}],

Cell[BoxData[
 RowBox[{"alternative", "[", 
  RowBox[{
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "c"}], "+", "e"}], ",", "u", ",", "v"}], "]"}], ",", 
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"b", " ", "c"}], "+", "e"}], ",", "u", ",", "v"}], "]"}], ",", 
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "d"}], "+", "e"}], ",", "u", ",", "v"}], "]"}], ",", 
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"b", " ", "d"}], "+", "e"}], ",", "u", ",", "v"}], "]"}], ",", 
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "c"}], "+", "f"}], ",", "u", ",", "v"}], "]"}], ",", 
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"b", " ", "c"}], "+", "f"}], ",", "u", ",", "v"}], "]"}], ",", 
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "d"}], "+", "f"}], ",", "u", ",", "v"}], "]"}], ",", 
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"b", " ", "d"}], "+", "f"}], ",", "u", ",", "v"}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.606196702707017*^9, 3.606196714332326*^9}}]
}, Open  ]],

Cell["\<\
However, it is only pulled out of functions, that are listed in \
$altFunctionList:\
\>", "Text",
 CellChangeTimes->{{3.606196736364108*^9, 3.606196760875966*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myfunc", "[", 
  RowBox[{
   RowBox[{"alternative", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{
    RowBox[{"alternative", "[", 
     RowBox[{"c", ",", "d"}], "]"}], "*", 
    RowBox[{"alternative", "[", 
     RowBox[{"e", ",", "f"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6061967821071243`*^9, 3.6061968016811533`*^9}}],

Cell[BoxData[
 RowBox[{"myfunc", "[", 
  RowBox[{
   RowBox[{"alternative", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"alternative", "[", 
    RowBox[{
     RowBox[{"c", " ", "e"}], ",", 
     RowBox[{"d", " ", "e"}], ",", 
     RowBox[{"c", " ", "f"}], ",", 
     RowBox[{"d", " ", "f"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6061968026040907`*^9}]
}, Open  ]],

Cell["Adding the function should do the trick:", "Text",
 CellChangeTimes->{{3.6061967622841167`*^9, 3.606196777964342*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$altFunctionList", ",", "myfunc"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.606196807181476*^9, 3.606196816384602*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myfunc", "[", 
  RowBox[{
   RowBox[{"alternative", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{
    RowBox[{"alternative", "[", 
     RowBox[{"c", ",", "d"}], "]"}], "*", 
    RowBox[{"alternative", "[", 
     RowBox[{"e", ",", "f"}], "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"alternative", "[", 
  RowBox[{
   RowBox[{"myfunc", "[", 
    RowBox[{"a", ",", 
     RowBox[{"c", " ", "e"}]}], "]"}], ",", 
   RowBox[{"myfunc", "[", 
    RowBox[{"a", ",", 
     RowBox[{"d", " ", "e"}]}], "]"}], ",", 
   RowBox[{"myfunc", "[", 
    RowBox[{"a", ",", 
     RowBox[{"c", " ", "f"}]}], "]"}], ",", 
   RowBox[{"myfunc", "[", 
    RowBox[{"a", ",", 
     RowBox[{"d", " ", "f"}]}], "]"}], ",", 
   RowBox[{"myfunc", "[", 
    RowBox[{"b", ",", 
     RowBox[{"c", " ", "e"}]}], "]"}], ",", 
   RowBox[{"myfunc", "[", 
    RowBox[{"b", ",", 
     RowBox[{"d", " ", "e"}]}], "]"}], ",", 
   RowBox[{"myfunc", "[", 
    RowBox[{"b", ",", 
     RowBox[{"c", " ", "f"}]}], "]"}], ",", 
   RowBox[{"myfunc", "[", 
    RowBox[{"b", ",", 
     RowBox[{"d", " ", "f"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.606196825532177*^9}]
}, Open  ]],

Cell["Further functions simplify writing conditions:", "Text",
 CellChangeTimes->{{3.6061967622841167`*^9, 3.606196777964342*^9}, {
  3.606197369885475*^9, 3.606197404796205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FreeQ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "c"}], "]"}], "&&", 
  RowBox[{"FreeQ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "d"}], "]"}], "&&", 
  RowBox[{"FreeQ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "e"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606197408031382*^9, 3.606197447411352*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.606197433814754*^9, 3.6061974508765593`*^9}}]
}, Open  ]],

Cell["can also be written as", "Text",
 CellChangeTimes->{{3.6061967622841167`*^9, 3.606196777964342*^9}, {
  3.606197369885475*^9, 3.6061973994535933`*^9}, {3.606197436925786*^9, 
  3.606197455486034*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606197456748452*^9, 3.606197465604279*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.606197465954919*^9}]
}, Open  ]],

Cell["or even", "Text",
 CellChangeTimes->{{3.6061967622841167`*^9, 3.606196777964342*^9}, 
   3.606197369885475*^9, {3.606197473934416*^9, 3.606197474733632*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQAll", "[", 
  RowBox[{"a", ",", "b", ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606197476107315*^9, 3.60619748384102*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.60619748457216*^9}]
}, Open  ]],

Cell["There are some more:", "Text",
 CellChangeTimes->{{3.6061967622841167`*^9, 3.606196777964342*^9}, 
   3.606197369885475*^9, {3.6061975136463623`*^9, 3.6061975282542887`*^9}, {
   3.6061975624943037`*^9, 3.60619756316595*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "FreeQNone"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FreeQAllUnsigned"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FreeQNoneUnsigned"}]}], "Input",
 CellChangeTimes->{{3.606197565018631*^9, 3.606197576785274*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"FreeQNone[expr1,...,listOfElements] checks if the sequence of \
expressions (expr1,...) depends on all elements in \
listOfElements\\n\\nArguments:\\n\\nexpr1,...: sequence of \
expressions\\nlistOfElements: list of elements\\n\\nReturns: True if \
{expr1,...} depends on all the elements from listOfElements, False otherwise.\
\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.606197578066867*^9},
 CellTags->"Info3606204777-7505383"],

Cell[BoxData[
 StyleBox["\<\"FreeQAllUnsigned[expr1,...,listOfElements]  removes minus \
signs that may be in front of parameters in listOfElements, then invokes \
FreeQAll.\\nEquivalent to \
FreeQAll[a,removeSign/@b].\\n\\nArguments:\\n\\nexpr1,...: sequence of \
expressions\\nlistOfElements: list of elements\\n\\nReturns: True if all \
expressions are free of all elements, False otherwise\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.606197578286519*^9},
 CellTags->"Info3606204778-7505383"],

Cell[BoxData[
 StyleBox["\<\"FreeQNoneUnsigned[expr1,...,listOfElements] removes minus \
signs that may be in front of parameters in listOfSymbols, then invokes \
FreeQNone\\nEquivalent to \
FreeQNone[a,removeSign/@b].\\n\\nArguments:\\n\\nexpr1,...: sequence of \
expressions\\nlistOfElements: list of elements\\n\\nReturns: True if \
{expr1,...} depends on all the elements from listOfElements, False otherwise.\
\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.606197578494195*^9},
 CellTags->"Info3606204778-7505383"]
}, Open  ]]
}, Open  ]],

Cell["\<\
If one wants to prevent pattern matching for a specific (sub)expression one \
can use the keepNotInvolving and keepClean functions:\
\>", "Text",
 CellChangeTimes->{{3.616230436985544*^9, 3.61623049149822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], 
    RowBox[{"f", "[", 
     RowBox[{"c", ",", "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"expr", "/.", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"G", "[", 
    RowBox[{"v", ",", "u"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"keepNotInvolving", "[", 
    RowBox[{"expr", ",", "a"}], "]"}], "/.", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}], "\[RuleDelayed]", " ", 
    RowBox[{"G", "[", 
     RowBox[{"v", ",", "u"}], "]"}]}]}], " ", "//", 
  "keepClean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"keepInvolving", "[", 
    RowBox[{"expr", ",", "a"}], "]"}], "/.", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}], "\[RuleDelayed]", " ", 
    RowBox[{"G", "[", 
     RowBox[{"v", ",", "u"}], "]"}]}]}], " ", "//", "keepClean"}]}], "Input",
 CellChangeTimes->{{3.61623043092278*^9, 3.616230432333048*^9}, {
  3.616230492795895*^9, 3.6162305548978367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "[", 
   RowBox[{"b", ",", "a"}], "]"}], " ", 
  RowBox[{"G", "[", 
   RowBox[{"d", ",", "c"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6162305217314167`*^9, 3.616230555984489*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"c", ",", "d"}], "]"}], " ", 
  RowBox[{"G", "[", 
   RowBox[{"b", ",", "a"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6162305217314167`*^9, 3.6162305559855747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b"}], "]"}], " ", 
  RowBox[{"G", "[", 
   RowBox[{"d", ",", "c"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6162305217314167`*^9, 3.616230555986471*^9}}]
}, Open  ]],

Cell["\<\
It prevents pattern matching by enclosing the heads in the \
Utilityy`Private`KEEP function.\
\>", "Text",
 CellChangeTimes->{{3.616230436985544*^9, 3.61623049149822*^9}, {
  3.61623056857003*^9, 3.6162306228577003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keepNotInvolving", "[", 
  RowBox[{"expr", ",", "a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.616230680079062*^9, 3.616230680318343*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b"}], "]"}], " ", 
  RowBox[{
   RowBox[{"Utility`Private`KEEP", "[", "f", "]"}], "[", 
   RowBox[{"c", ",", "d"}], "]"}]}]], "Output",
 CellChangeTimes->{3.616230614282845*^9, 3.616230681507402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Utility`keep*"}]], "Input",
 CellChangeTimes->{{3.6162306979915047`*^9, 3.616230707356659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["Utility`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["Utility`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["keepClean",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3616237907-2682487", {"keepClean", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["keepInvolving",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237907-2682487", {"keepInvolving", "Utility`"}},
          ButtonNote->"Utility`"], 
         ButtonBox["keepNotInvolving",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3616237907-2682487", {"keepNotInvolving", "Utility`"}},
          ButtonNote->"Utility`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.616230707852408*^9}],

Cell[BoxData[
 StyleBox["\<\"Encloses all function heads that do not depend on any of the \
variables supplied in Utility`Private`KEEP\\nOptions: \\n  IgnoreHeads: list \
of symbols, these heads are not enclosed.\\n  OnlyHeads: list of symbols, \
only heads from this list are enclosed\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3616237907-2682487"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transforming Rules and Expressions", "Section",
 CellChangeTimes->{{3.6061349994307413`*^9, 3.606135006038556*^9}}],

Cell[CellGroupData[{

Cell["Permutations", "Subsection",
 CellChangeTimes->{{3.606190844935643*^9, 3.606190853396867*^9}}],

Cell["\<\
There are two additional functions that can construct permutations, both are \
pretty forward to use:\
\>", "Text",
 CellChangeTimes->{{3.606190866421789*^9, 3.606190912901104*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvenPermutations", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061909150114*^9, 3.6061909284572678`*^9}, {
  3.606190966922686*^9, 3.606190968635069*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "c", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "a", ",", "b"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.606190972788047*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OddPermutations", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.606190973801374*^9, 3.606190975240505*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "c", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "a", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "b", ",", "a"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.606190975763844*^9}]
}, Open  ]],

Cell["\<\
Note that these functions can also work with heads different from \
\[OpenCurlyDoubleQuote]List\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.606191021654235*^9, 3.606191054085248*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvenPermutations", "[", 
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061910040093803`*^9, 3.606191007035179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", "c", ",", "a"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "a", ",", "b"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.606191007795499*^9}]
}, Open  ]],

Cell[TextData[{
 "Internally they use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s Permutations and filter the result."
}], "Text",
 CellChangeTimes->{{3.6061911168690863`*^9, 3.606191130886932*^9}, 
   3.6061911632536993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Expressions", "Subsection",
 CellChangeTimes->{
  3.606191176197933*^9, {3.606191211909416*^9, 3.606191227972875*^9}, {
   3.606191496037448*^9, 3.6061914962297583`*^9}, {3.606191808933793*^9, 
   3.606191810293778*^9}}],

Cell["\<\
One can remove a sign from an expression with the following function\
\>", "Text",
 CellChangeTimes->{{3.6061912432218924`*^9, 3.606191289973761*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"removeSign", "[", 
  RowBox[{"-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "-", "b"}], ")"}], "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606191291516803*^9, 3.606191300682819*^9}, {
  3.606191379803574*^9, 3.6061913834360323`*^9}, {3.606191428619886*^9, 
  3.60619143159558*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"a", "-", "b"}], ")"}], "2"]], "Output",
 CellChangeTimes->{
  3.60619130235612*^9, 3.606191380180121*^9, {3.6061914241164*^9, 
   3.606191431908387*^9}}]
}, Open  ]],

Cell["\<\
It removes a sign, if there actually is one in front of the whole expression:\
\
\>", "Text",
 CellChangeTimes->{{3.606191317206071*^9, 3.606191357669243*^9}, {
  3.6061914417660513`*^9, 3.606191454630164*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"removeSign", "[", 
  RowBox[{
   RowBox[{"-", "a"}], "+", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.606191336536529*^9, 3.6061913407289467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "a"}], "+", "b"}]], "Output",
 CellChangeTimes->{3.606191341380185*^9, 3.6061914333957376`*^9}]
}, Open  ]],

Cell["\<\
Furthermore, we can remove all blanks from an expression, using the following \
function\
\>", "Text",
 CellChangeTimes->{{3.60619152168561*^9, 3.60619154586167*^9}, 
   3.606191613413471*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"removeBlanks", "[", 
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a_", "+", "b__"}], ")"}], "^", "2"}], ",", "c___"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.606191547047276*^9, 3.606191597563265*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"a", "+", "b"}], ")"}], "2"], ",", "c"}], "]"}]], "Output",
 CellChangeTimes->{{3.606191565524252*^9, 3.606191597908506*^9}}]
}, Open  ]],

Cell["\<\
If one wants to have all possible combinations of signs for specific \
variables in an expression, one can do that as well:\
\>", "Text",
 CellChangeTimes->{{3.6062060313714046`*^9, 3.606206085771078*^9}, {
  3.6062061707960052`*^9, 3.606206172234724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], 
   RowBox[{"g", "[", "d", "]"}]}], "//", 
  RowBox[{"invertArguments", "[", 
   RowBox[{"a", ",", "b"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606206086830509*^9, 3.606206098030299*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], " ", 
    RowBox[{"g", "[", "d", "]"}]}], ",", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"-", "a"}], ",", "b", ",", "c"}], "]"}], " ", 
    RowBox[{"g", "[", "d", "]"}]}], ",", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", 
      RowBox[{"-", "b"}], ",", "c"}], "]"}], " ", 
    RowBox[{"g", "[", "d", "]"}]}], ",", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"-", "a"}], ",", 
      RowBox[{"-", "b"}], ",", "c"}], "]"}], " ", 
    RowBox[{"g", "[", "d", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6062060988581753`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rules", "Subsection",
 CellChangeTimes->{{3.606191817366534*^9, 3.606191818485293*^9}}],

Cell["\<\
Modifying rules can be quite hard. For easier performing transformations of \
some parts of rules, we can split rules:\
\>", "Text",
 CellChangeTimes->{{3.6061918725983553`*^9, 3.606191933877823*^9}, {
  3.606191964565391*^9, 3.6061919652535343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ruleParts", "=", 
  RowBox[{"ruleSplit", "[", 
   RowBox[{
    RowBox[{"a_", "+", "b_"}], "\[RuleDelayed]", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"a", ">", "0"}], "&&", 
      RowBox[{"b", ">", "0"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606191934657755*^9, 3.606191977948659*^9}, {
  3.60619211053825*^9, 3.6061921134366913`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"rdc\"\>", ",", 
   RowBox[{"a_", "+", "b_"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"a", ">", "0"}], "&&", 
     RowBox[{"b", ">", "0"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6061919666615553`*^9, 3.606191978645379*^9}, {
  3.606192115893147*^9, 3.606192118016676*^9}}]
}, Open  ]],

Cell["\<\
The first entry in the list is the type of rule. Currently, four types are \
supported:
 - \[CloseCurlyDoubleQuote]r\[CloseCurlyDoubleQuote]: a simple rule (a->b)
 - \[CloseCurlyDoubleQuote]rd\[CloseCurlyDoubleQuote]: a delayed rule (a:>b)
 - \[CloseCurlyDoubleQuote]rc\[CloseCurlyDoubleQuote]: a rule with a \
condition (a->b/;c)
 - \[CloseCurlyDoubleQuote]rdc\[CloseCurlyDoubleQuote]: a delayed rule with a \
condition (a:>b/;c)
 
The second entry in the list is the pattern, the third is the result in a \
surrounding Hold. The fourth one is the condition if the rule has one. This \
is also surrounded by a Hold function.\
\>", "Text",
 CellChangeTimes->{{3.6061919963747263`*^9, 3.60619209271028*^9}, {
  3.6061921377832413`*^9, 3.6061921797024183`*^9}}],

Cell["We can now modify parts of the rule:", "Text",
 CellChangeTimes->{{3.6061921851109877`*^9, 3.606192194454166*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ruleParts", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", 
  RowBox[{
   RowBox[{"ruleParts", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "/.", 
   RowBox[{
    RowBox[{"Verbatim", "[", "b_", "]"}], "\[RuleDelayed]", " ", 
    TagBox[
     StyleBox[
      RowBox[{"Pattern", "[", 
       RowBox[{"b", ",", 
        RowBox[{"BlankSequence", "[", "]"}]}], "]"}],
      ShowSpecialCharacters->False,
      ShowStringCharacters->True,
      NumberMarks->True],
     FullForm]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ruleParts", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "=", "\"\<rd\>\""}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"removes", " ", "the", " ", "condition"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.606192197767208*^9, 3.606192240011709*^9}, {
  3.6061955923710814`*^9, 3.6061956139517384`*^9}}],

Cell[BoxData[
 RowBox[{"a_", "+", "b__"}]], "Output",
 CellChangeTimes->{3.606192246293058*^9, 3.606195617177194*^9}]
}, Open  ]],

Cell["Finally, we have to join the parts to a rule again:", "Text",
 CellChangeTimes->{{3.6061922611748657`*^9, 3.606192272358205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ruleFinal", "=", 
  RowBox[{"ruleJoin", "[", "ruleParts", "]"}]}]], "Input",
 CellChangeTimes->{{3.606192275816935*^9, 3.606192281704777*^9}, {
  3.606195525404627*^9, 3.606195527068427*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a_", "+", "b__"}], "\[RuleDelayed]", 
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b"}], "]"}]}]], "Output",
 CellChangeTimes->{3.60619228333311*^9, 3.606195527657364*^9, 
  3.606195619309519*^9}]
}, Open  ]],

Cell["\<\
If we do not need a rule, but a function instead, this can be arranged easily:\
\>", "Text",
 CellChangeTimes->{{3.606195473387402*^9, 3.606195488762466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn1", "=", 
   RowBox[{"ruleToFunction", "[", "ruleFinal", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fn1", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"a", "+", "b", "+", "c"}], "]"}], "+", "d", "+", "e"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.606195490974976*^9, 3.606195579329671*^9}, {
  3.606195624160462*^9, 3.6061956383374853`*^9}, {3.606195707538618*^9, 
  3.6061957105778723`*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"d", ",", "e", ",", 
   RowBox[{"g", "[", 
    RowBox[{"a", "+", "b", "+", "c"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.606195549240966*^9, 3.606195565561418*^9}, {
   3.606195621497373*^9, 3.60619563872961*^9}, 3.6061957110656652`*^9}]
}, Open  ]],

Cell["\<\
The function applies the rule only once. If you want it to be applied \
multiple times, use\
\>", "Text",
 CellChangeTimes->{{3.606195473387402*^9, 3.606195488762466*^9}, {
  3.606195656699071*^9, 3.606195677131007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn2", "=", 
   RowBox[{"ruleToFunctionRepeated", "[", "ruleFinal", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fn2", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"a", "+", "b", "+", "c"}], "]"}], "+", "d", "+", "e"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.606195682240243*^9, 3.606195717711771*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"d", ",", "e", ",", 
   RowBox[{"g", "[", 
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.606195687790436*^9, 3.6061957182016068`*^9}]
}, Open  ]],

Cell["\<\
For rules involving sums, a function to \[OpenCurlyDoubleQuote]normalize\
\[CloseCurlyDoubleQuote] the rule exists:
It identifies all factors that are independent of summation variables and \
puts them on the right hand side of the rule\
\>", "Text",
 CellChangeTimes->{{3.6062061893711*^9, 3.606206252970475*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rule", "=", 
  RowBox[{
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], 
      RowBox[{"g", "[", 
       RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
      RowBox[{"h", "[", "u_", "]"}]}], ",", 
     RowBox[{"set", "[", 
      RowBox[{"c_", ",", "v___"}], "]"}]}], "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"sum", "[", 
    RowBox[{"X", ",", 
     RowBox[{"set", "[", "v", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.606207063520721*^9, 3.606207172869787*^9}, {
  3.606207221636133*^9, 3.6062072290623817`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], " ", 
     RowBox[{"g", "[", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], " ", 
     RowBox[{"h", "[", "u_", "]"}]}], ",", 
    RowBox[{"set", "[", 
     RowBox[{"c_", ",", "v___"}], "]"}]}], "]"}], "\[RuleDelayed]", 
  RowBox[{"sum", "[", 
   RowBox[{"X", ",", 
    RowBox[{"set", "[", "v", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.606207152442893*^9, 3.606207174616802*^9}, 
   3.606207231899469*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normalizeSumRule", "[", "rule", "]"}]], "Input",
 CellChangeTimes->{{3.606206259039094*^9, 3.6062062773588667`*^9}, 
   3.606207060959545*^9, {3.606207146959773*^9, 3.606207151039164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], " ", 
     RowBox[{"h", "[", "u_", "]"}]}], ",", 
    RowBox[{"set", "[", 
     RowBox[{"c_", ",", "v___"}], "]"}]}], "]"}], "\[RuleDelayed]", 
  RowBox[{"sum", "[", 
   RowBox[{
    FractionBox["X", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}]], ",", 
    RowBox[{"set", "[", "v", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.606207154891272*^9, 3.606207175708186*^9}, 
   3.606207233035943*^9}]
}, Open  ]],

Cell["\<\
Note that the summation variables must be in an orderless set for this to \
work. Factors that involve variables which cannot be found in the remaining \
expression will not be moved to the right-hand side, e.g. h[u_] in the \
expression above.\
\>", "Text",
 CellChangeTimes->{{3.606207240925283*^9, 3.60620726062076*^9}, {
  3.606207330189502*^9, 3.606207373388377*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplification", "Subsection",
 CellChangeTimes->{{3.615718118937583*^9, 3.615718121464815*^9}}],

Cell["\<\
For the sum and integrate functions simplification functions exist to perform \
basic reordering.
Let\[CloseCurlyQuote]s have a look at the following expression:\
\>", "Text",
 CellChangeTimes->{{3.615718133017179*^9, 3.615718227737094*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], 
     RowBox[{"e", "[", "c", "]"}], 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"b", ",", "c"}], "]"}], 
     RowBox[{"integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{"DiracDelta", "[", 
         RowBox[{"u", "-", "w"}], "]"}], 
        RowBox[{"sum", "[", 
         RowBox[{
          RowBox[{"i", "[", "d", "]"}], ",", 
          RowBox[{"set", "[", "d", "]"}]}], "]"}]}], ",", 
       RowBox[{"set", "[", 
        RowBox[{"u", ",", "v", ",", "w"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"set", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.615718229984242*^9, 3.615718231914925*^9}, {
  3.6158689252111692`*^9, 3.615868982827208*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[Sum]", "a"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "b"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "c"], 
     RowBox[{
      RowBox[{"e", "(", "c", ")"}], " ", 
      RowBox[{"f", "(", 
       RowBox[{"a", ",", "b"}], ")"}], " ", 
      TemplateBox[{RowBox[{"b", ",", "c"}]},
       "KroneckerDeltaSeq"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Integral]", 
        RowBox[{"\[Integral]", 
         RowBox[{"\[Integral]", 
          RowBox[{
           RowBox[{
            UnderscriptBox["\[Sum]", "d"], 
            RowBox[{"i", "(", "d", ")"}]}], " ", 
           TemplateBox[{RowBox[{
               RowBox[{"u", "-", "w"}]}]},
            "DiracDeltaSeq"], " ", 
           RowBox[{"g", "(", 
            RowBox[{"u", ",", "v"}], ")"}], 
           RowBox[{"\[DifferentialD]", "w"}], 
           RowBox[{"\[DifferentialD]", "v"}], 
           RowBox[{"\[DifferentialD]", "u"}]}]}]}]}], ")"}]}]}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.61571823280947*^9, 3.6157182876171722`*^9, {3.6158689568430843`*^9, 
   3.6158689839501257`*^9}}]
}, Open  ]],

Cell["\<\
Obviously, parts of the integral do not depend on integration variables and \
we have to places of sums. We can simplify the expression:\
\>", "Text",
 CellChangeTimes->{{3.6157182400090857`*^9, 3.615718276121957*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "//", "simplifySumIntegrate"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.615718277462254*^9, 3.615718291426676*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[Sum]", "a"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "c"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "d"], 
     RowBox[{
      RowBox[{"e", "(", "c", ")"}], " ", 
      RowBox[{"i", "(", "d", ")"}], " ", 
      RowBox[{"f", "(", 
       RowBox[{"a", ",", "c"}], ")"}], " ", 
      RowBox[{"\[Integral]", 
       RowBox[{"\[Integral]", 
        RowBox[{
         RowBox[{"g", "(", 
          RowBox[{"w", ",", "v"}], ")"}], 
         RowBox[{"\[DifferentialD]", "w"}], 
         RowBox[{"\[DifferentialD]", "v"}]}]}]}]}]}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.615718284424531*^9, 3.6157182918174763`*^9}, {
  3.615868958850583*^9, 3.615868985969574*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Traditional Form", "Section",
 CellChangeTimes->{{3.606133336769796*^9, 3.606133340530094*^9}}],

Cell["\<\
The Utility package has a few functions that have a special representation \
when using TraditionalForm. Furthermore it allows to add indexed and primed \
numbers in an easy manner.\
\>", "Text",
 CellChangeTimes->{{3.6061327785932283`*^9, 3.606132779088702*^9}, {
  3.60613335235431*^9, 3.606133424194178*^9}}],

Cell["\<\
The functions sum and integrate, both of which are replacements for the \
corresponding built-in functions, have the same traditional form as their \
built-in counterparts:\
\>", "Text",
 CellChangeTimes->{{3.6061327785932283`*^9, 3.606132779088702*^9}, {
  3.606133430450593*^9, 3.6061335008026543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"integrate", "[", 
   RowBox[{
    RowBox[{"sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", ",", "b", ",", "c"}], "]"}], " ", 
       RowBox[{"g", "[", "\[Psi]", "]"}], 
       RowBox[{"h", "[", "\[Omega]", "]"}]}], ",", "a", ",", "b", ",", "c"}], 
     "]"}], ",", "\[Psi]", ",", "\[Omega]"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.60613350168353*^9, 3.606133546289439*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       UnderscriptBox["\[Sum]", "a"], 
       RowBox[{
        UnderscriptBox["\[Sum]", "b"], 
        RowBox[{
         UnderscriptBox["\[Sum]", "c"], 
         RowBox[{
          RowBox[{"g", "(", "\[Psi]", ")"}], " ", 
          RowBox[{"h", "(", "\[Omega]", ")"}], " ", 
          RowBox[{"f", "(", 
           RowBox[{"a", ",", "b", ",", "c"}], ")"}]}]}]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "\[Omega]"}], 
     RowBox[{"\[DifferentialD]", "\[Psi]"}]}]}]}], TraditionalForm]], "Output",\

 CellChangeTimes->{
  3.606133548577078*^9, {3.606134395908132*^9, 3.606134416744821*^9}}]
}, Open  ]],

Cell[TextData[{
 "There usually is a problem representing primed or indexed quantum numbers \
in ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"],
 " It is cumbersome to type them and sometimes they get in the way of pattern \
matching, as indices are treated in funny ways. Therefore the following \
notation is advised. Assume you have the angular momentum j, then one uses a \
\[OpenCurlyDoubleQuote]p\[CloseCurlyDoubleQuote] to denote a primed version \
and [...] to denote indices. Furthermore one can prepend an \
\[OpenCurlyDoubleQuote]m\[CloseCurlyDoubleQuote] to denote projection quantum \
numbers, e.g.\nj - some angular momentum\njp - second angular momentum j\
\[CloseCurlyQuote]\nj[a,b] - indices:  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["j", 
    RowBox[{"a", "\[InvisibleComma]", "b"}]], TraditionalForm]]],
 "\nmjp[a,b,c] - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"m", "'"}], 
    SubscriptBox["j", 
     RowBox[{"a", "\[InvisibleComma]", "b"}]]], TraditionalForm]]],
 "\n\nOf course, without telling ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to represent them in a different way, it will not do so:"
}], "Text",
 CellChangeTimes->{{3.6061327785932283`*^9, 3.606132779088702*^9}, {
  3.606133613826746*^9, 3.606133725348689*^9}, {3.606133756996379*^9, 
  3.606134063268215*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"j", ",", "jp", ",", 
    RowBox[{"j", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
    RowBox[{"jp", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "mj", ",", 
    RowBox[{"mj", "[", "a", "]"}], ",", "mjp", ",", 
    RowBox[{"mjp", "[", 
     RowBox[{"t", ",", "v"}], "]"}]}], "}"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.606134064449456*^9, 3.6061340921478148`*^9}, {
  3.6061342040912323`*^9, 3.6061342094368763`*^9}, {3.60613428559757*^9, 
  3.606134286028563*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"j", ",", "jp", ",", 
    RowBox[{"j", "(", 
     RowBox[{"a", ",", "b", ",", "c"}], ")"}], ",", 
    RowBox[{"jp", "(", 
     RowBox[{"u", ",", "v"}], ")"}], ",", "mj", ",", 
    RowBox[{"mj", "(", "a", ")"}], ",", "mjp", ",", 
    RowBox[{"mjp", "(", 
     RowBox[{"t", ",", "v"}], ")"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.606134096764011*^9, {3.606134397988154*^9, 3.606134418962788*^9}}]
}, Open  ]],

Cell["One can declare j to be an angular momentum quantum number:", "Text",
 CellChangeTimes->{{3.6061327785932283`*^9, 3.606132779088702*^9}, {
  3.6061341099562483`*^9, 3.6061341342440453`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"declareIndexedAM", "[", "j", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.606134122983223*^9, 3.606134149398808*^9}}],

Cell["Now, using TraditionalForm should work:", "Text",
 CellChangeTimes->{{3.6061327785932283`*^9, 3.606132779088702*^9}, {
  3.6061341099562483`*^9, 3.606134161812693*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"j", ",", "jp", ",", 
    RowBox[{"j", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
    RowBox[{"jp", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "mj", ",", 
    RowBox[{"mj", "[", "a", "]"}], ",", "mjp", ",", 
    RowBox[{"mjp", "[", 
     RowBox[{"t", ",", "v"}], "]"}]}], "}"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.606134214301133*^9, 3.606134225516275*^9}, {
  3.606134282126189*^9, 3.60613428250913*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"j", ",", 
    SuperscriptBox["j", "\[Prime]"], ",", 
    SubscriptBox["j", 
     RowBox[{"a", "\[InvisibleComma]", "b", "\[InvisibleComma]", "c"}]], ",", 
    
    SubsuperscriptBox["j", 
     RowBox[{"u", "\[InvisibleComma]", "v"}], "\[Prime]"], ",", 
    SubscriptBox["m", "j"], ",", 
    SubscriptBox["m", 
     SubscriptBox["j", "a"]], ",", 
    SubsuperscriptBox["m", "j", "\[Prime]"], ",", 
    SubsuperscriptBox["m", 
     SubscriptBox["j", 
      RowBox[{"t", "\[InvisibleComma]", "v"}]], "\[Prime]"]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.606134165108054*^9, 3.606134228452559*^9, 
  3.6061342887397957`*^9, 3.606134424596382*^9}]
}, Open  ]],

Cell["\<\
There are additional declare* Functions. They just declare parts of the above \
representations:\
\>", "Text",
 CellChangeTimes->{{3.6061327785932283`*^9, 3.606132779088702*^9}, {
  3.6061341099562483`*^9, 3.606134161812693*^9}, {3.6061344434446287`*^9, 
  3.60613448957288*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"declarePrimed", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"declareIndexed", "[", "b", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"declareIndexedPrimed", "[", "c", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"declareIndexedAM", "[", "d", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "ap", ",", 
    RowBox[{"a", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
    RowBox[{"ap", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "ma", ",", 
    RowBox[{"ma", "[", "a", "]"}], ",", "map", ",", 
    RowBox[{"map", "[", 
     RowBox[{"t", ",", "v"}], "]"}]}], "}"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"b", ",", "bp", ",", 
    RowBox[{"b", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
    RowBox[{"bp", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "mb", ",", 
    RowBox[{"mb", "[", "a", "]"}], ",", "mbp", ",", 
    RowBox[{"mbp", "[", 
     RowBox[{"t", ",", "v"}], "]"}]}], "}"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"c", ",", "cp", ",", 
    RowBox[{"c", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
    RowBox[{"cp", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "mc", ",", 
    RowBox[{"mc", "[", "a", "]"}], ",", "mcp", ",", 
    RowBox[{"mcp", "[", 
     RowBox[{"t", ",", "v"}], "]"}]}], "}"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"d", ",", "dp", ",", 
    RowBox[{"d", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
    RowBox[{"dp", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "md", ",", 
    RowBox[{"md", "[", "a", "]"}], ",", "mdp", ",", 
    RowBox[{"mdp", "[", 
     RowBox[{"t", ",", "v"}], "]"}]}], "}"}], "//", 
  "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.606134495288939*^9, 3.606134572637508*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"a", ",", 
    SuperscriptBox["a", "\[Prime]"], ",", 
    RowBox[{"a", "(", 
     RowBox[{"a", ",", "b", ",", "c"}], ")"}], ",", 
    RowBox[{
     SuperscriptBox["a", "\[Prime]"], "(", 
     RowBox[{"u", ",", "v"}], ")"}], ",", "ma", ",", 
    RowBox[{"ma", "(", "a", ")"}], ",", "map", ",", 
    RowBox[{"map", "(", 
     RowBox[{"t", ",", "v"}], ")"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.606134574660864*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"b", ",", "bp", ",", 
    SubscriptBox["b", 
     RowBox[{"a", "\[InvisibleComma]", "b", "\[InvisibleComma]", "c"}]], ",", 
    
    RowBox[{"bp", "(", 
     RowBox[{"u", ",", "v"}], ")"}], ",", "mb", ",", 
    RowBox[{"mb", "(", "a", ")"}], ",", "mbp", ",", 
    RowBox[{"mbp", "(", 
     RowBox[{"t", ",", "v"}], ")"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6061345746636066`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"c", ",", 
    SuperscriptBox["c", "\[Prime]"], ",", 
    SubscriptBox["c", 
     RowBox[{"a", "\[InvisibleComma]", "b", "\[InvisibleComma]", "c"}]], ",", 
    
    SubsuperscriptBox["c", 
     RowBox[{"u", "\[InvisibleComma]", "v"}], "\[Prime]"], ",", "mc", ",", 
    RowBox[{"mc", "(", "a", ")"}], ",", "mcp", ",", 
    RowBox[{"mcp", "(", 
     RowBox[{"t", ",", "v"}], ")"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.606134574666441*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"d", ",", 
    SuperscriptBox["d", "\[Prime]"], ",", 
    SubscriptBox["d", 
     RowBox[{"a", "\[InvisibleComma]", "b", "\[InvisibleComma]", "c"}]], ",", 
    
    SubsuperscriptBox["d", 
     RowBox[{"u", "\[InvisibleComma]", "v"}], "\[Prime]"], ",", 
    SubscriptBox["m", "d"], ",", 
    SubscriptBox["m", 
     SubscriptBox["d", "a"]], ",", 
    SubsuperscriptBox["m", "d", "\[Prime]"], ",", 
    SubsuperscriptBox["m", 
     SubscriptBox["d", 
      RowBox[{"t", "\[InvisibleComma]", "v"}]], "\[Prime]"]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.606134574668953*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Misc", "Section",
 CellChangeTimes->{{3.606133314578802*^9, 3.6061333152343493`*^9}}],

Cell["For orderless lists, one can use \[OpenCurlyDoubleQuote]set\
\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.606196194028027*^9, 3.6061962057717037`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"set", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}], "\[Equal]", 
  RowBox[{"set", "[", 
   RowBox[{"c", ",", "a", ",", "b"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606196207412073*^9, 3.606196218224387*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.606196219036968*^9}]
}, Open  ]],

Cell["For getting the sign of an expression, use \[OpenCurlyDoubleQuote]sign\
\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.606196231915531*^9, 3.6061962422683907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sign", "[", 
  RowBox[{"-", 
   RowBox[{"f", "[", 
    RowBox[{"a", "+", "b"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606196245155723*^9, 3.6061962728329487`*^9}, {
  3.6061963244358253`*^9, 3.606196328144438*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.606196258154014*^9, 3.6061962733705053`*^9}, 
   3.606196337082453*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sign", "[", 
  RowBox[{"f", "[", 
   RowBox[{"a", "+", "b"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.606196264911303*^9, 3.6061962825291567`*^9}, {
  3.606196330545835*^9, 3.6061963339998703`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.606196265176848*^9, 3.606196283194615*^9}, 
   3.6061963379141827`*^9}]
}, Open  ]],

Cell["This is different from the built-in Sign:", "Text",
 CellChangeTimes->{{3.606196288380138*^9, 3.606196297179812*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sign", "[", 
  RowBox[{"-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "+", "b"}], ")"}], "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606196298383155*^9, 3.606196307133382*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox[
   RowBox[{"Sign", "[", 
    RowBox[{"a", "+", "b"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.606196307746189*^9, 3.606196339098778*^9}]
}, Open  ]],

Cell["\<\
Only minus signs in front of the whole expression (after standard evaluation) \
are found:\
\>", "Text",
 CellChangeTimes->{{3.606196342668041*^9, 3.6061964045088177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sign", "[", 
  RowBox[{
   RowBox[{"-", "a"}], "+", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.606196372814657*^9, 3.606196376224305*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6061963768261642`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sign", "[", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"a", "+", "b"}], ")"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"\[Equal]", 
    RowBox[{"sign", "[", 
     RowBox[{
      RowBox[{"-", "a"}], "-", "b"}], "]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.606196380020856*^9, 3.606196418449547*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.606196385050469*^9}]
}, Open  ]],

Cell["\<\
We have replacements for the built-in integrate and sum functions, with the \
same TraditionalForm representation:\
\>", "Text",
 CellChangeTimes->{{3.6061964521247377`*^9, 3.606196487819666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"integrate", "[", 
  RowBox[{
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b", ",", "x"}], "]"}], ",", "a", ",", "b"}], "]"}], 
   ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.6061965085413437`*^9, 3.6061965126172953`*^9}}],

Cell[BoxData[
 RowBox[{"integrate", "[", 
  RowBox[{
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b", ",", "x"}], "]"}], ",", "a", ",", "b"}], "]"}], 
   ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.606196513021575*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      UnderscriptBox["\[Sum]", "a"], 
      RowBox[{
       UnderscriptBox["\[Sum]", "b"], 
       RowBox[{"f", "(", 
        RowBox[{"a", ",", "b", ",", "x"}], ")"}]}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.60619651302385*^9}]
}, Open  ]],

Cell["\<\
The reason is the built-in evaluation procedures for Sum and Integrate, which \
may take 5 minutes to determine that they cannot simplify anything\
\>", "Text",
 CellChangeTimes->{{3.606196522956771*^9, 3.606196562365097*^9}}],

Cell["\<\
If you ever want to know all the variables and parameters you have in some \
expression, you can do this:\
\>", "Text",
 CellChangeTimes->{{3.6061976264795103`*^9, 3.606197655278051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getAllVariables", "[", 
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b", ",", "c"}], "]"}], 
     RowBox[{"g", "[", 
      RowBox[{"c", ",", "d", ",", "e"}], "]"}], "*", "E"}], ",", "a", ",", 
    "b", ",", "c", ",", "d", ",", "e"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.606197658001883*^9, 3.6061976862122793`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.6061976894689493`*^9}]
}, Open  ]],

Cell["\<\
Note that all symbols with the attribute \[OpenCurlyDoubleQuote]Constant\
\[CloseCurlyDoubleQuote] are ignored:\
\>", "Text",
 CellChangeTimes->{{3.606197695918241*^9, 3.606197717758074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "E", "]"}]], "Input",
 CellChangeTimes->{{3.606197720644595*^9, 3.6061977229455013`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Constant", ",", "Protected", ",", "ReadProtected"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.606197723281189*^9}]
}, Open  ]],

Cell["\<\
It will also find variables that are declared to be indexed. In the following \
case a[1] and b[2] are considered variables, while c is assumed to be a \
function.\
\>", "Text",
 CellChangeTimes->{{3.616228861462854*^9, 3.616228890837875*^9}, {
  3.616230269641323*^9, 3.616230328697213*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"declareIndexed", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"getAllVariables", "[", 
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], ",", 
    RowBox[{"b", "[", "2", "]"}], ",", 
    RowBox[{"c", "[", "3", "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.616228900923745*^9, 3.616228909467654*^9}, {
  3.616230271964717*^9, 3.616230290032486*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], ",", 
   RowBox[{"b", "[", "2", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6162302867134457`*^9, 3.6162302905565653`*^9}}]
}, Open  ]],

Cell["\<\
For transforming characters to numbers and back, two functions are available:\
\
\>", "Text",
 CellChangeTimes->{{3.606205885050868*^9, 3.606205909146093*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tonum", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.6062059317698717`*^9, 3.606205939100843*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.606205940019669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tochar", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.606205941905003*^9, 3.6062059696954193`*^9}}],

Cell[BoxData["h"], "Output",
 CellChangeTimes->{{3.6062059448050632`*^9, 3.606205970217474*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tochar", "[", 
  RowBox[{"tonum", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.606205972986561*^9, 3.6062059803983727`*^9}}],

Cell[BoxData["t"], "Output",
 CellChangeTimes->{3.606205981167976*^9}]
}, Open  ]],

Cell["Note that the characters must be defined in Global scope.", "Text",
 CellChangeTimes->{{3.606205911898109*^9, 3.606205928538291*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Tests", "Section",
 CellChangeTimes->{{3.615867578705372*^9, 3.615867579552623*^9}}],

Cell["\<\
This section contains tests that cannot be automated easily and are therefore \
not in the Utility_tests notebook (in fact, they might cause errors if \
entered in that notebook)\
\>", "Text",
 CellChangeTimes->{{3.615867586672456*^9, 3.615867643825342*^9}}],

Cell[CellGroupData[{

Cell["Traditional Form", "Subsection",
 CellChangeTimes->{{3.615867648961439*^9, 3.6158676532175007`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"declareIndexedAM", "[", "s", "]"}], "\n", 
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"l", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", "b", 
   ",", "c", ",", "d"}], "]"}], "\n", 
 RowBox[{"%", "//", "TraditionalForm"}], "\n", 
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"l", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"set", "[", 
    RowBox[{"d", ",", "c", ",", "b"}], "]"}]}], "]"}], "\n", 
 RowBox[{"%", "//", "TraditionalForm"}], "\n", 
 RowBox[{"integrate", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", "a", ",", "b"}], "]"}], "\n", 
 RowBox[{"%", "//", "TraditionalForm"}], "\n", 
 RowBox[{"integrate", "[", 
  RowBox[{
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"l", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"set", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], "]"}], "\n", 
 RowBox[{"%", "//", "TraditionalForm"}], "\n", 
 RowBox[{"s", "[", 
  RowBox[{"a", ",", "b"}], "]"}], "\n", 
 RowBox[{"%", "//", "TraditionalForm"}], "\n", 
 RowBox[{"sp", "[", 
  RowBox[{"a", ",", "b"}], "]"}], "\n", 
 RowBox[{"%", "//", "TraditionalForm"}], "\n", 
 RowBox[{"ms", "[", 
  RowBox[{"a", ",", "b"}], "]"}], "\n", 
 RowBox[{"%", "//", "TraditionalForm"}], "\n", 
 RowBox[{"msp", "[", 
  RowBox[{"a", ",", "b"}], "]"}], "\n", 
 RowBox[{"%", "//", "TraditionalForm"}], "\n", "sp", "\n", 
 RowBox[{"%", "//", "TraditionalForm"}]}], "Input"],

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"l", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", "b", 
   ",", "c", ",", "d"}], "]"}]], "Output",
 CellChangeTimes->{3.6158686528382607`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[Sum]", "b"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "c"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "d"], 
     RowBox[{
      SubsuperscriptBox["Y", "l", "m"], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6158686528394547`*^9}],

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"l", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"set", "[", 
    RowBox[{"b", ",", "c", ",", "d"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.615868652840665*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["\[Sum]", "b"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "c"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "d"], 
     RowBox[{
      SubsuperscriptBox["Y", "l", "m"], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}]}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.615868652842642*^9}],

Cell[BoxData[
 RowBox[{"integrate", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", "a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.615868652843878*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"f", "(", 
      RowBox[{"a", ",", "b"}], ")"}], 
     RowBox[{"\[DifferentialD]", "b"}], 
     RowBox[{"\[DifferentialD]", "a"}]}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.615868652844778*^9}],

Cell[BoxData[
 RowBox[{"integrate", "[", 
  RowBox[{
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"l", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"set", "[", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.615868652845561*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["Y", "l", "m"], "(", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], ")"}], 
     RowBox[{"\[DifferentialD]", "\[Phi]"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6158686528464727`*^9}],

Cell[BoxData[
 RowBox[{"s", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.615868652847234*^9}],

Cell[BoxData[
 FormBox[
  SubscriptBox["s", 
   RowBox[{"a", "\[InvisibleComma]", "b"}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.6158686528480797`*^9}],

Cell[BoxData[
 RowBox[{"sp", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.61586865284901*^9}],

Cell[BoxData[
 FormBox[
  SubsuperscriptBox["s", 
   RowBox[{"a", "\[InvisibleComma]", "b"}], "\[Prime]"], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.615868652850102*^9}],

Cell[BoxData[
 RowBox[{"ms", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.615868652851468*^9}],

Cell[BoxData[
 FormBox[
  SubscriptBox["m", 
   SubscriptBox["s", 
    RowBox[{"a", "\[InvisibleComma]", "b"}]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.615868652852339*^9}],

Cell[BoxData[
 RowBox[{"msp", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.615868652853571*^9}],

Cell[BoxData[
 FormBox[
  SubsuperscriptBox["m", 
   SubscriptBox["s", 
    RowBox[{"a", "\[InvisibleComma]", "b"}]], "\[Prime]"], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.615868652854473*^9}],

Cell[BoxData["sp"], "Output",
 CellChangeTimes->{3.615868652855689*^9}],

Cell[BoxData[
 FormBox[
  SuperscriptBox["s", "\[Prime]"], TraditionalForm]], "Output",
 CellChangeTimes->{3.615868652856998*^9}]
}, Open  ]]
}, Closed]],

Cell["Misc", "Subsection",
 CellChangeTimes->{{3.6161411326519203`*^9, 3.6161411346046753`*^9}}]
}, Open  ]]
},
WindowSize->{889, 867},
WindowMargins->{{Automatic, 169}, {75, Automatic}},
ShowSelection->True,
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3606204777-7505383"->{
  Cell[33945, 1067, 474, 8, 182, "Print",
   CellTags->"Info3606204777-7505383"]},
 "Info3606204778-7505383"->{
  Cell[34422, 1077, 512, 9, 200, "Print",
   CellTags->"Info3606204778-7505383"],
  Cell[34937, 1088, 532, 9, 200, "Print",
   CellTags->"Info3606204778-7505383"]},
 "Info3616237907-2682487"->{
  Cell[39814, 1242, 360, 5, 96, "Print",
   CellTags->"Info3616237907-2682487"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3606204777-7505383", 83751, 2670},
 {"Info3606204778-7505383", 83863, 2673},
 {"Info3616237907-2682487", 84057, 2678}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 183, 4, 33, "Text"],
Cell[743, 26, 419, 11, 55, "Input",
 InitializationCell->True],
Cell[1165, 39, 179, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[1369, 45, 145, 3, 32, "Input",
 InitializationCell->True],
Cell[1517, 50, 9256, 245, 366, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10810, 300, 101, 1, 65, "Section"],
Cell[10914, 303, 166, 3, 33, "Text"],
Cell[11083, 308, 136, 1, 33, "Text"],
Cell[11222, 311, 389, 10, 32, "Input"],
Cell[11614, 323, 281, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[11920, 332, 191, 5, 32, "Input"],
Cell[12114, 339, 151, 3, 32, "Output"]
}, Open  ]],
Cell[12280, 345, 125, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[12430, 350, 191, 5, 32, "Input"],
Cell[12624, 357, 139, 4, 32, "Output"]
}, Open  ]],
Cell[12778, 364, 250, 5, 33, "Text"],
Cell[13031, 371, 788, 20, 32, "Input"],
Cell[13822, 393, 657, 11, 99, "Text"],
Cell[CellGroupData[{
Cell[14504, 408, 718, 22, 121, "Input"],
Cell[15225, 432, 219, 4, 32, "Output"],
Cell[15447, 438, 236, 5, 32, "Output"],
Cell[15686, 445, 244, 5, 32, "Output"],
Cell[15933, 452, 280, 7, 32, "Output"],
Cell[16216, 461, 242, 5, 32, "Output"]
}, Open  ]],
Cell[16473, 469, 324, 6, 55, "Text"],
Cell[16800, 477, 431, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[17256, 492, 734, 24, 121, "Input"],
Cell[17993, 518, 99, 2, 32, "Output"],
Cell[18095, 522, 117, 3, 32, "Output"],
Cell[18215, 527, 120, 3, 32, "Output"],
Cell[18338, 532, 158, 5, 32, "Output"],
Cell[18499, 539, 120, 3, 32, "Output"]
}, Open  ]],
Cell[18634, 545, 209, 4, 55, "Text"],
Cell[18846, 551, 886, 23, 55, "Input"],
Cell[CellGroupData[{
Cell[19757, 578, 1133, 39, 121, "Input"],
Cell[20893, 619, 195, 4, 32, "Output"],
Cell[21091, 625, 213, 5, 32, "Output"],
Cell[21307, 632, 312, 9, 32, "Output"],
Cell[21622, 643, 314, 9, 32, "Output"],
Cell[21939, 654, 295, 8, 32, "Output"]
}, Open  ]],
Cell[22249, 665, 461, 13, 32, "Input"],
Cell[CellGroupData[{
Cell[22735, 682, 1094, 38, 121, "Input"],
Cell[23832, 722, 97, 2, 32, "Output"],
Cell[23932, 726, 117, 3, 32, "Output"],
Cell[24052, 731, 214, 7, 32, "Output"],
Cell[24269, 740, 218, 7, 32, "Output"],
Cell[24490, 749, 195, 6, 32, "Output"]
}, Open  ]],
Cell[24700, 758, 166, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[24891, 765, 330, 8, 32, "Input"],
Cell[25224, 775, 394, 11, 34, "Output"]
}, Open  ]],
Cell[25633, 789, 130, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[25788, 794, 433, 12, 77, "Input"],
Cell[26224, 808, 154, 3, 32, "Output"],
Cell[26381, 813, 154, 3, 32, "Output"],
Cell[26538, 818, 156, 3, 32, "Output"]
}, Open  ]],
Cell[26709, 824, 116, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[26850, 829, 187, 4, 32, "Input"],
Cell[27040, 835, 130, 3, 32, "Output"]
}, Open  ]],
Cell[27185, 841, 276, 6, 55, "Text"],
Cell[CellGroupData[{
Cell[27486, 851, 407, 11, 32, "Input"],
Cell[27896, 864, 1169, 36, 55, "Output"]
}, Open  ]],
Cell[29080, 903, 173, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[29278, 911, 372, 10, 32, "Input"],
Cell[29653, 923, 379, 11, 32, "Output"]
}, Open  ]],
Cell[30047, 937, 124, 1, 33, "Text"],
Cell[30174, 940, 189, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[30388, 948, 302, 9, 32, "Input"],
Cell[30693, 959, 870, 27, 55, "Output"]
}, Open  ]],
Cell[31578, 989, 179, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[31782, 995, 448, 14, 32, "Input"],
Cell[32233, 1011, 99, 1, 32, "Output"]
}, Open  ]],
Cell[32347, 1015, 206, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[32578, 1022, 258, 7, 32, "Input"],
Cell[32839, 1031, 73, 1, 32, "Output"]
}, Open  ]],
Cell[32927, 1035, 163, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[33115, 1041, 218, 5, 32, "Input"],
Cell[33336, 1048, 72, 1, 32, "Output"]
}, Open  ]],
Cell[33423, 1052, 231, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[33679, 1059, 241, 4, 77, "Input"],
Cell[CellGroupData[{
Cell[33945, 1067, 474, 8, 182, "Print",
 CellTags->"Info3606204777-7505383"],
Cell[34422, 1077, 512, 9, 200, "Print",
 CellTags->"Info3606204778-7505383"],
Cell[34937, 1088, 532, 9, 200, "Print",
 CellTags->"Info3606204778-7505383"]
}, Open  ]]
}, Open  ]],
Cell[35496, 1101, 220, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[35741, 1109, 1156, 34, 99, "Input"],
Cell[36900, 1145, 222, 6, 32, "Output"],
Cell[37125, 1153, 224, 6, 32, "Output"],
Cell[37352, 1161, 222, 6, 32, "Output"]
}, Open  ]],
Cell[37589, 1170, 231, 5, 33, "Text"],
Cell[CellGroupData[{
Cell[37845, 1179, 171, 3, 32, "Input"],
Cell[38019, 1184, 266, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38322, 1196, 124, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[38471, 1202, 1340, 38, 54, "Print"],
Cell[39814, 1242, 360, 5, 96, "Print",
 CellTags->"Info3616237907-2682487"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40235, 1254, 121, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[40381, 1259, 100, 1, 44, "Subsection"],
Cell[40484, 1262, 191, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[40700, 1270, 241, 5, 32, "Input"],
Cell[40944, 1277, 302, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41283, 1291, 191, 4, 32, "Input"],
Cell[41477, 1297, 302, 9, 32, "Output"]
}, Open  ]],
Cell[41794, 1309, 210, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[42029, 1317, 199, 4, 32, "Input"],
Cell[42231, 1323, 317, 9, 32, "Output"]
}, Open  ]],
Cell[42563, 1335, 256, 7, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42856, 1347, 235, 4, 45, "Subsection"],
Cell[43094, 1353, 160, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[43279, 1360, 321, 8, 32, "Input"],
Cell[43603, 1370, 212, 6, 34, "Output"]
}, Open  ]],
Cell[43830, 1379, 220, 5, 33, "Text"],
Cell[CellGroupData[{
Cell[44075, 1388, 173, 4, 32, "Input"],
Cell[44251, 1394, 134, 3, 32, "Output"]
}, Open  ]],
Cell[44400, 1400, 202, 5, 33, "Text"],
Cell[CellGroupData[{
Cell[44627, 1409, 270, 8, 32, "Input"],
Cell[44900, 1419, 220, 6, 37, "Output"]
}, Open  ]],
Cell[45135, 1428, 266, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[45426, 1437, 293, 8, 32, "Input"],
Cell[45722, 1447, 705, 23, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46476, 1476, 93, 1, 44, "Subsection"],
Cell[46572, 1479, 261, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[46858, 1488, 438, 12, 32, "Input"],
Cell[47299, 1502, 444, 12, 32, "Output"]
}, Open  ]],
Cell[47758, 1517, 769, 15, 187, "Text"],
Cell[48530, 1534, 120, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[48675, 1539, 882, 26, 77, "Input"],
Cell[49560, 1567, 117, 2, 32, "Output"]
}, Open  ]],
Cell[49692, 1572, 135, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[49852, 1577, 215, 4, 32, "Input"],
Cell[50070, 1583, 229, 6, 32, "Output"]
}, Open  ]],
Cell[50314, 1592, 168, 3, 33, "Text"],
Cell[CellGroupData[{
Cell[50507, 1599, 449, 12, 55, "Input"],
Cell[50959, 1613, 291, 6, 32, "Output"]
}, Open  ]],
Cell[51265, 1622, 230, 5, 33, "Text"],
Cell[CellGroupData[{
Cell[51520, 1631, 355, 10, 55, "Input"],
Cell[51878, 1643, 249, 6, 32, "Output"]
}, Open  ]],
Cell[52142, 1652, 324, 6, 77, "Text"],
Cell[CellGroupData[{
Cell[52491, 1662, 613, 17, 32, "Input"],
Cell[53107, 1681, 555, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53699, 1702, 212, 3, 32, "Input"],
Cell[53914, 1707, 566, 17, 51, "Output"]
}, Open  ]],
Cell[54495, 1727, 382, 7, 77, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54914, 1739, 102, 1, 45, "Subsection"],
Cell[55019, 1742, 251, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[55295, 1751, 941, 27, 77, "Input"],
Cell[56239, 1780, 1126, 33, 65, "Output"]
}, Open  ]],
Cell[57380, 1816, 228, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[57633, 1824, 176, 4, 32, "Input"],
Cell[57812, 1830, 736, 22, 60, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[58609, 1859, 101, 1, 51, "Section"],
Cell[58713, 1862, 321, 6, 55, "Text"],
Cell[59037, 1870, 315, 6, 55, "Text"],
Cell[CellGroupData[{
Cell[59377, 1880, 480, 13, 32, "Input"],
Cell[59860, 1895, 717, 21, 65, "Output"]
}, Open  ]],
Cell[60592, 1919, 1335, 31, 257, "Text"],
Cell[CellGroupData[{
Cell[61952, 1954, 559, 14, 32, "Input"],
Cell[62514, 1970, 470, 12, 33, "Output"]
}, Open  ]],
Cell[62999, 1985, 196, 2, 33, "Text"],
Cell[63198, 1989, 153, 3, 32, "Input"],
Cell[63354, 1994, 174, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[63553, 2000, 504, 13, 32, "Input"],
Cell[64060, 2015, 715, 19, 38, "Output"]
}, Open  ]],
Cell[64790, 2037, 289, 6, 33, "Text"],
Cell[CellGroupData[{
Cell[65104, 2047, 1985, 54, 187, "Input"],
Cell[67092, 2103, 486, 13, 33, "Output"],
Cell[67581, 2118, 454, 12, 33, "Output"],
Cell[68038, 2132, 510, 13, 33, "Output"],
Cell[68551, 2147, 644, 18, 38, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[69244, 2171, 91, 1, 51, "Section"],
Cell[69338, 2174, 170, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[69533, 2180, 250, 6, 32, "Input"],
Cell[69786, 2188, 73, 1, 32, "Output"]
}, Open  ]],
Cell[69874, 2192, 180, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[70079, 2198, 248, 6, 32, "Input"],
Cell[70330, 2206, 139, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70506, 2214, 228, 5, 32, "Input"],
Cell[70737, 2221, 122, 2, 32, "Output"]
}, Open  ]],
Cell[70874, 2226, 123, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[71022, 2231, 216, 6, 32, "Input"],
Cell[71241, 2239, 190, 5, 34, "Output"]
}, Open  ]],
Cell[71446, 2247, 182, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[71653, 2255, 165, 4, 32, "Input"],
Cell[71821, 2261, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71930, 2267, 343, 11, 32, "Input"],
Cell[72276, 2280, 70, 1, 32, "Output"]
}, Open  ]],
Cell[72361, 2284, 206, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[72592, 2292, 360, 9, 55, "Input"],
Cell[72955, 2303, 266, 8, 32, "Output"],
Cell[73224, 2313, 386, 12, 65, "Output"]
}, Open  ]],
Cell[73625, 2328, 236, 4, 55, "Text"],
Cell[73864, 2334, 197, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[74086, 2342, 401, 10, 32, "Input"],
Cell[74490, 2354, 147, 3, 32, "Output"]
}, Open  ]],
Cell[74652, 2360, 201, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[74878, 2368, 131, 2, 32, "Input"],
Cell[75012, 2372, 155, 4, 32, "Output"]
}, Open  ]],
Cell[75182, 2379, 302, 6, 55, "Text"],
Cell[CellGroupData[{
Cell[75509, 2389, 472, 12, 55, "Input"],
Cell[75984, 2403, 201, 5, 32, "Output"]
}, Open  ]],
Cell[76200, 2411, 169, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[76394, 2419, 126, 2, 32, "Input"],
Cell[76523, 2423, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76630, 2429, 127, 2, 32, "Input"],
Cell[76760, 2433, 96, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76893, 2439, 159, 3, 32, "Input"],
Cell[77055, 2444, 70, 1, 32, "Output"]
}, Open  ]],
Cell[77140, 2448, 139, 1, 33, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[77316, 2454, 90, 1, 51, "Section"],
Cell[77409, 2457, 268, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[77702, 2466, 106, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[77833, 2471, 1558, 39, 429, "Input"],
Cell[79394, 2512, 251, 6, 32, "Output"],
Cell[79648, 2520, 359, 12, 68, "Output"],
Cell[80010, 2534, 291, 7, 32, "Output"],
Cell[80304, 2543, 357, 12, 68, "Output"],
Cell[80664, 2557, 192, 5, 32, "Output"],
Cell[80859, 2564, 310, 9, 66, "Output"],
Cell[81172, 2575, 299, 7, 32, "Output"],
Cell[81474, 2584, 375, 11, 66, "Output"],
Cell[81852, 2597, 120, 3, 32, "Output"],
Cell[81975, 2602, 162, 4, 45, "Output"],
Cell[82140, 2608, 120, 3, 32, "Output"],
Cell[82263, 2613, 180, 5, 47, "Output"],
Cell[82446, 2620, 121, 3, 32, "Output"],
Cell[82570, 2625, 184, 5, 50, "Output"],
Cell[82757, 2632, 122, 3, 32, "Output"],
Cell[82882, 2637, 204, 6, 51, "Output"],
Cell[83089, 2645, 71, 1, 32, "Output"],
Cell[83163, 2648, 129, 3, 78, "Output"]
}, Open  ]]
}, Closed]],
Cell[83319, 2655, 96, 1, 36, "Subsection"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
